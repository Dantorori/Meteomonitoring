/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TableIndexImport } from './routes/table/index'
import { Route as TableCompanyIdImport } from './routes/table/$companyId'
import { Route as TableLinedetailsLineIdImport } from './routes/table/line_details.$lineId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TableIndexRoute = TableIndexImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => rootRoute,
} as any)

const TableCompanyIdRoute = TableCompanyIdImport.update({
  id: '/table/$companyId',
  path: '/table/$companyId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/table/$companyId.lazy').then((d) => d.Route),
)

const TableLinedetailsLineIdRoute = TableLinedetailsLineIdImport.update({
  id: '/table/line_details/$lineId',
  path: '/table/line_details/$lineId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/table/$companyId': {
      id: '/table/$companyId'
      path: '/table/$companyId'
      fullPath: '/table/$companyId'
      preLoaderRoute: typeof TableCompanyIdImport
      parentRoute: typeof rootRoute
    }
    '/table/': {
      id: '/table/'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableIndexImport
      parentRoute: typeof rootRoute
    }
    '/table/line_details/$lineId': {
      id: '/table/line_details/$lineId'
      path: '/table/line_details/$lineId'
      fullPath: '/table/line_details/$lineId'
      preLoaderRoute: typeof TableLinedetailsLineIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/table/$companyId': typeof TableCompanyIdRoute
  '/table': typeof TableIndexRoute
  '/table/line_details/$lineId': typeof TableLinedetailsLineIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/table/$companyId': typeof TableCompanyIdRoute
  '/table': typeof TableIndexRoute
  '/table/line_details/$lineId': typeof TableLinedetailsLineIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/table/$companyId': typeof TableCompanyIdRoute
  '/table/': typeof TableIndexRoute
  '/table/line_details/$lineId': typeof TableLinedetailsLineIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/table/$companyId'
    | '/table'
    | '/table/line_details/$lineId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/table/$companyId' | '/table' | '/table/line_details/$lineId'
  id:
    | '__root__'
    | '/'
    | '/table/$companyId'
    | '/table/'
    | '/table/line_details/$lineId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TableCompanyIdRoute: typeof TableCompanyIdRoute
  TableIndexRoute: typeof TableIndexRoute
  TableLinedetailsLineIdRoute: typeof TableLinedetailsLineIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TableCompanyIdRoute: TableCompanyIdRoute,
  TableIndexRoute: TableIndexRoute,
  TableLinedetailsLineIdRoute: TableLinedetailsLineIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/table/$companyId",
        "/table/",
        "/table/line_details/$lineId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/table/$companyId": {
      "filePath": "table/$companyId.tsx"
    },
    "/table/": {
      "filePath": "table/index.tsx"
    },
    "/table/line_details/$lineId": {
      "filePath": "table/line_details.$lineId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
